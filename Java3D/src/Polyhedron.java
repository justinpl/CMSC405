/**
 * A Polyhedron object represents an indexed face set model of a polyhedron.
 * Each Polyhedron object, poly, has four instance variables:
 *
 *     poly.vertices -- an array of vertices where each vertex is given
 *                      as an array of three numbers.
 *
 *     poly.faces -- an array of faces, where each face is an array of integers.
 *                   The integers in the array are indices into the array of
 *                   vertices, and they give the vertices of the face in 
 *                   counterclockwise order as seen from the outside.
 *
 *     poly.faceColors -- and array of colors, one for each face, where a color
 *                   is given as an array of three numbers in the range 0.0 to 1.0.
 *                   Can be null.
 *
 *     poly.faceNormals -- an array of normal vectors, one for each face.
 *                   Each normal is given as an array of three numbers.
 *                   
 * It also has an instance variable maxVertexLength that is the length of the longest
 * vertex, treating the vertices as vectors.
 * 
 * The following public static member variables are defined, and the value of each variable
 * is a Polyhedron object with the format just defined:
 *
 *     octocone
 *     dome
 *     square donut
 *     hourglass
 *     Letter X
 *     Letter V
 *     
 *    
*/

public class Polyhedron {

    public double[][] vertices;
    public int[][] faces;
    public double[][] normals;
    public double[][] faceColors;
    public double maxVertexLength; // The length of the longest vertex vector.

    public Polyhedron(double[][] vertices, int[][] faces, double[][] normals) {
        this(vertices,faces,null,normals);
    }
   
    public Polyhedron(double[][] vertices, int[][] faces, double[][] faceColors, double[][] normals) {
        this.vertices = vertices;
        this.faces = faces;
        this.faceColors = faceColors;
        this.normals = normals;
        double max = 0;
        for (int i = 0; i < vertices.length; i++) {
            double[] v = vertices[i];
            double len2 = v[0]*v[0] + v[1]*v[1] + v[2]*v[2];
            max = Math.max(max,len2);
        }
        this.maxVertexLength = Math.sqrt(max);
    }

    public static Polyhedron octocone = new Polyhedron( 
        new double[][] {
          {-0.5,-1,0.0},
          {-0.375,-1,0.375},
          {-0.375,-1,-0.375},
          {0.0,-1,0.5},
          {0.0,-1,-0.5},
          {0.375,-1,0.375},
          {0.375,-1,-0.375},
          {0.5,-1,0.0},
          {0.0,1,0.0}
       },
        new int[][] {
          {0,1,8},
          {0,2,8},
          {1,3,8},
          {2,4,8},
          {3,5,8},
          {4,6,8},
          {5,7,8},
          {6,7,8},
          {0,1,3,5,7,6,4,2}
       },
        new double[][] {
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1}
       },
        new double[][] {
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
       }
    );
    
    public static Polyhedron dome = new Polyhedron( 
        new double[][] {
          {-0.75,0.125,0.0},
          {-0.565,0.125,0.5},
          {-0.565,0.125,-0.5},
          {0.0,0.125,0.75},
          {0.0,0.125,-0.75},
          {0.565,0.125,0.5},
          {0.565,0.125,-0.5},
          {0.75,0.125,0.0},
          {-1,-0.5,0.0},
          {-0.75,-0.5,0.75},
          {-0.75,-0.5,-0.75},
          {0.0,-0.5,1},
          {0.0,-0.5,-1},
          {0.75,-0.5,0.75},
          {0.75,-0.5,-0.75},
          {1,-0.5,0.0},
          {0.0,0.5,0.0}
          
       },
        new int[][] {
          {0,1,16},
          {0,2,16},
          {1,3,16},
          {2,4,16},
          {3,5,16},
          {4,6,16},
          {5,7,16},
          {6,7,16},
          {0,1,9,8},
          {0,2,10,8},
          {1,3,11,9},
          {2,4,12,10},
          {3,5,13,11},
          {4,6,14,12},
          {5,7,15,13},
          {6,7,15,14},
          {8,9,11,13,15,14,12,10}
       },
        new double[][] {
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
       },
        new double[][] {
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
       }
    );
    
    public static Polyhedron squaredonut = new Polyhedron( 
        new double[][] {
          {-0.625,0.5,0.0},
          {0.0,0.5,0.625},
          {0.0,0.5,-0.625},
          {0.625,0.5,0.0},
          {-1.0,0.0,0.0},
          {-0.25,0.0,0.0},
          {0.0,0.0,0.25},
          {0.0,0.0,1.0},
          {0.0,0.0,-0.25},
          {0.0,0.0,-1.0},
          {0.25,0.0,0.0},
          {1,0.0,0.0},
          {-0.625,-0.5,0.0},
          {0.0,-0.5,0.625},
          {0.0,-0.5,-0.625},
          {0.625,-0.5,0.0},
          
       },
        new int[][] {
          {0,1,7,4},
          {0,1,6,5},
          {1,3,11,7},
          {1,3,10,6},
          {2,0,4,9},
          {2,0,5,8},
          {2,3,10,8},
          {2,3,11,9},
          {12,13,7,4},
          {12,13,6,5},
          {13,15,11,7},
          {13,15,10,6},
          {12,14,9,4},
          {12,14,8,5},
          {14,15,10,8},
          {14,15,11,9},
       },
        new double[][] {
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1}
       },
        new double[][] {
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},

       }
    );
    
    public static Polyhedron hourglass = new Polyhedron( 
        new double[][] {
          {-0.5,1.0,0.0},
          {0.0,1.0,0.5},
          {0.0,1.0,-0.5},
          {0.5,1.0,0.0},
          {-0.125,0.0,0.0},
          {0.0,0.0,0.125},
          {0.0,0.0,-0.125},
          {0.125,0.0,0.0},
          {-0.5,-1.0,0.0},
          {0.0,-1.0,0.5},
          {0.0,-1.0,-0.5},
          {0.5,-1.0,0.0},
          
       },
        new int[][] {
          {0,1,5,4},
          {0,2,6,4},
          {1,3,7,5},
          {2,3,7,6},
          {4,5,9,8},
          {4,6,10,8},
          {5,7,11,9},
          {6,7,11,10},
          {0,1,3,2},
          {8,9,11,10}          
       },
        new double[][] {
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1}
       },
        new double[][] {
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
       }
    );
    
    public static Polyhedron letterX= new Polyhedron( 
        new double[][] {
          {-1.0,1.0,0.25},
          {-1.0,1.0,-0.25},
          {-0.5,1.0,0.25},
          {-0.5,1.0,-0.25},
          {0.5,1.0,0.25},
          {0.5,1.0,-0.25},
          {1.0,1.0,0.25},
          {1.0,1.0,-0.25},
          {-1.0,-1.0,0.25},
          {-1.0,-1.0,-0.25},
          {-0.5,-1.0,0.25},
          {-0.5,-1.0,-0.25},
          {0.5,-1.0,0.25},
          {0.5,-1.0,-0.25},
          {1.0,-1.0,0.25},
          {1.0,-1.0,-0.25},
          
       },
        new int[][] {
          {0,1,13,12},
          {0,2,14,12},
          {2,3,15,14},
          {1,3,15,13},
          {4,5,9,8},
          {4,6,10,8},
          {6,7,11,10},
          {5,7,11,9},
          {0,2,3,1},
          {4,6,7,5},
          {8,10,11,9},
          {12,14,15,13}
       },
        new double[][] {
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},

       },
        new double[][] {
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
       }
    );

     public static Polyhedron letterV= new Polyhedron( 
        new double[][] {
          {-1.0,1.0,0.25},
          {-1.0,1.0,-0.25},
          {-0.5,1.0,0.25},
          {-0.5,1.0,-0.25},
          {0.5,1.0,0.25},
          {0.5,1.0,-0.25},
          {1.0,1.0,0.25},
          {1.0,1.0,-0.25},
          {-0.25,-1.0,0.25},
          {-0.25,-1.0,-0.25},
          {0.25,-1.0,0.25},
          {0.25,-1.0,-0.25},
  
       },
        new int[][] {
          {0,1,9,8},
          {0,2,10,8},
          {2,3,11,10},
          {1,3,11,9},
          {4,5,9,8},
          {4,6,10,8},
          {6,7,11,10},
          {5,7,11,9},
          {0,2,3,1},
          {4,6,7,5},
          {8,10,11,9},

       },
        new double[][] {
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
          {1,1,1},
       },
        new double[][] {
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0},
          {0.0,0,0.0,0.0}
       }
    );
   
    
}

